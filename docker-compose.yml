services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
      args:
        HOST_UID: ${HOST_UID}
        HOST_GID: ${HOST_GID}
    ports:
      - "${VITE_PORT_HOST}:${VITE_PORT}"
    volumes:
      - ./src/laravel:/var/www/html
      # Том для node_modules:
      # чтобы node_modules из контейнера не затирался/не мешался с локальным,
      # а также чтобы npm install внутри контейнера работал корректно
      - node_modules:/var/www/html/node_modules
    working_dir: /var/www/html
    environment:
      VITE_PORT: ${VITE_PORT}
      VITE_PORT_HOST: ${VITE_PORT_HOST}
      NGINX_PORT_HOST: ${NGINX_PORT_HOST}
      REDIS_PORT: ${REDIS_PORT}
      DB_CONNECTION: ${DB_CONNECTION}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      ENABLE_XDEBUG: ${ENABLE_XDEBUG}
      PHP_IDE_CONFIG: ${PHP_IDE_CONFIG}
      HOST_UID: ${HOST_UID}
      HOST_GID: ${HOST_GID}
    depends_on:
      - db

  webserver:
    image: nginx:alpine
    ports:
      - "${NGINX_PORT_HOST}:${NGINX_PORT}"
    volumes:
      - ./src/laravel:/var/www/html
      - node_modules:/var/www/html/node_modules
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app

  db:
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT_HOST}:${DB_PORT}"
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql:ro

  redis:
    image: redis:alpine
    ports:
      - "${REDIS_PORT_HOST}:${REDIS_PORT}"

volumes:
  dbdata:
  node_modules: